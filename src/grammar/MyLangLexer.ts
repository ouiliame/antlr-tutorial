// Generated from ./grammar/MyLang.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class MyLangLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly StringLit = 29;
	public static readonly BoolLit = 30;
	public static readonly FloatLit = 31;
	public static readonly IntLit = 32;
	public static readonly Ident = 33;
	public static readonly LineComment = 34;
	public static readonly BlockComment = 35;
	public static readonly WS = 36;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "StringLit", "BoolLit", "FloatLit", "IntLit", 
		"Ident", "LineComment", "BlockComment", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'='", "'if'", "'('", "')'", "'{'", "'}'", "'else'", 
		"'return'", "','", "'+'", "'-'", "'*'", "'/'", "'%'", "'=='", "'!='", 
		"'<'", "'>'", "'<='", "'>='", "'&&'", "'||'", "'const'", "'int'", "'float'", 
		"'bool'", "'string'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "StringLit", "BoolLit", "FloatLit", "IntLit", "Ident", "LineComment", 
		"BlockComment", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(MyLangLexer._LITERAL_NAMES, MyLangLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return MyLangLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(MyLangLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "MyLang.g4"; }

	// @Override
	public get ruleNames(): string[] { return MyLangLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return MyLangLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return MyLangLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return MyLangLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02&\xEF\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
		"#\t#\x04$\t$\x04%\t%\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t" +
		"\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
		"\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19" +
		"\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x07\x1E" +
		"\xA7\n\x1E\f\x1E\x0E\x1E\xAA\v\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03" +
		"\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x05\x1F\xB7\n\x1F" +
		"\x03 \x06 \xBA\n \r \x0E \xBB\x03 \x03 \x06 \xC0\n \r \x0E \xC1\x03!\x06" +
		"!\xC5\n!\r!\x0E!\xC6\x03\"\x03\"\x07\"\xCB\n\"\f\"\x0E\"\xCE\v\"\x03#" +
		"\x03#\x03#\x03#\x07#\xD4\n#\f#\x0E#\xD7\v#\x03#\x03#\x03$\x03$\x03$\x03" +
		"$\x07$\xDF\n$\f$\x0E$\xE2\v$\x03$\x03$\x03$\x03$\x03$\x03%\x06%\xEA\n" +
		"%\r%\x0E%\xEB\x03%\x03%\x03\xE0\x02\x02&\x03\x02\x03\x05\x02\x04\x07\x02" +
		"\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02" +
		"\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12" +
		"#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02" +
		"\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C" +
		"\x02#E\x02$G\x02%I\x02&\x03\x02\b\x03\x02$$\x03\x022;\x05\x02C\\aac|\x06" +
		"\x022;C\\aac|\x04\x02\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x02\xF7\x02" +
		"\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02" +
		"\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F" +
		"\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15" +
		"\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B" +
		"\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!" +
		"\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02" +
		"\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02" +
		"\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03" +
		"\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02" +
		"\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02" +
		"C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02" +
		"\x02\x02\x03K\x03\x02\x02\x02\x05M\x03\x02\x02\x02\x07O\x03\x02\x02\x02" +
		"\tR\x03\x02\x02\x02\vT\x03\x02\x02\x02\rV\x03\x02\x02\x02\x0FX\x03\x02" +
		"\x02\x02\x11Z\x03\x02\x02\x02\x13_\x03\x02\x02\x02\x15f\x03\x02\x02\x02" +
		"\x17h\x03\x02\x02\x02\x19j\x03\x02\x02\x02\x1Bl\x03\x02\x02\x02\x1Dn\x03" +
		"\x02\x02\x02\x1Fp\x03\x02\x02\x02!r\x03\x02\x02\x02#u\x03\x02\x02\x02" +
		"%x\x03\x02\x02\x02\'z\x03\x02\x02\x02)|\x03\x02\x02\x02+\x7F\x03\x02\x02" +
		"\x02-\x82\x03\x02\x02\x02/\x85\x03\x02\x02\x021\x88\x03\x02\x02\x023\x8E" +
		"\x03\x02\x02\x025\x92\x03\x02\x02\x027\x98\x03\x02\x02\x029\x9D\x03\x02" +
		"\x02\x02;\xA4\x03\x02\x02\x02=\xB6\x03\x02\x02\x02?\xB9\x03\x02\x02\x02" +
		"A\xC4\x03\x02\x02\x02C\xC8\x03\x02\x02\x02E\xCF\x03\x02\x02\x02G\xDA\x03" +
		"\x02\x02\x02I\xE9\x03\x02\x02\x02KL\x07=\x02\x02L\x04\x03\x02\x02\x02" +
		"MN\x07?\x02\x02N\x06\x03\x02\x02\x02OP\x07k\x02\x02PQ\x07h\x02\x02Q\b" +
		"\x03\x02\x02\x02RS\x07*\x02\x02S\n\x03\x02\x02\x02TU\x07+\x02\x02U\f\x03" +
		"\x02\x02\x02VW\x07}\x02\x02W\x0E\x03\x02\x02\x02XY\x07\x7F\x02\x02Y\x10" +
		"\x03\x02\x02\x02Z[\x07g\x02\x02[\\\x07n\x02\x02\\]\x07u\x02\x02]^\x07" +
		"g\x02\x02^\x12\x03\x02\x02\x02_`\x07t\x02\x02`a\x07g\x02\x02ab\x07v\x02" +
		"\x02bc\x07w\x02\x02cd\x07t\x02\x02de\x07p\x02\x02e\x14\x03\x02\x02\x02" +
		"fg\x07.\x02\x02g\x16\x03\x02\x02\x02hi\x07-\x02\x02i\x18\x03\x02\x02\x02" +
		"jk\x07/\x02\x02k\x1A\x03\x02\x02\x02lm\x07,\x02\x02m\x1C\x03\x02\x02\x02" +
		"no\x071\x02\x02o\x1E\x03\x02\x02\x02pq\x07\'\x02\x02q \x03\x02\x02\x02" +
		"rs\x07?\x02\x02st\x07?\x02\x02t\"\x03\x02\x02\x02uv\x07#\x02\x02vw\x07" +
		"?\x02\x02w$\x03\x02\x02\x02xy\x07>\x02\x02y&\x03\x02\x02\x02z{\x07@\x02" +
		"\x02{(\x03\x02\x02\x02|}\x07>\x02\x02}~\x07?\x02\x02~*\x03\x02\x02\x02" +
		"\x7F\x80\x07@\x02\x02\x80\x81\x07?\x02\x02\x81,\x03\x02\x02\x02\x82\x83" +
		"\x07(\x02\x02\x83\x84\x07(\x02\x02\x84.\x03\x02\x02\x02\x85\x86\x07~\x02" +
		"\x02\x86\x87\x07~\x02\x02\x870\x03\x02\x02\x02\x88\x89\x07e\x02\x02\x89" +
		"\x8A\x07q\x02\x02\x8A\x8B\x07p\x02\x02\x8B\x8C\x07u\x02\x02\x8C\x8D\x07" +
		"v\x02\x02\x8D2\x03\x02\x02\x02\x8E\x8F\x07k\x02\x02\x8F\x90\x07p\x02\x02" +
		"\x90\x91\x07v\x02\x02\x914\x03\x02\x02\x02\x92\x93\x07h\x02\x02\x93\x94" +
		"\x07n\x02\x02\x94\x95\x07q\x02\x02\x95\x96\x07c\x02\x02\x96\x97\x07v\x02" +
		"\x02\x976\x03\x02\x02\x02\x98\x99\x07d\x02\x02\x99\x9A\x07q\x02\x02\x9A" +
		"\x9B\x07q\x02\x02\x9B\x9C\x07n\x02\x02\x9C8\x03\x02\x02\x02\x9D\x9E\x07" +
		"u\x02\x02\x9E\x9F\x07v\x02\x02\x9F\xA0\x07t\x02\x02\xA0\xA1\x07k\x02\x02" +
		"\xA1\xA2\x07p\x02\x02\xA2\xA3\x07i\x02\x02\xA3:\x03\x02\x02\x02\xA4\xA8" +
		"\x07$\x02\x02\xA5\xA7\n\x02\x02\x02\xA6\xA5\x03\x02\x02\x02\xA7\xAA\x03" +
		"\x02\x02\x02\xA8\xA6\x03\x02\x02\x02\xA8\xA9\x03\x02\x02\x02\xA9\xAB\x03" +
		"\x02\x02\x02\xAA\xA8\x03\x02\x02\x02\xAB\xAC\x07$\x02\x02\xAC<\x03\x02" +
		"\x02\x02\xAD\xAE\x07v\x02\x02\xAE\xAF\x07t\x02\x02\xAF\xB0\x07w\x02\x02" +
		"\xB0\xB7\x07g\x02\x02\xB1\xB2\x07h\x02\x02\xB2\xB3\x07c\x02\x02\xB3\xB4" +
		"\x07n\x02\x02\xB4\xB5\x07u\x02\x02\xB5\xB7\x07g\x02\x02\xB6\xAD\x03\x02" +
		"\x02\x02\xB6\xB1\x03\x02\x02\x02\xB7>\x03\x02\x02\x02\xB8\xBA\t\x03\x02" +
		"\x02\xB9\xB8\x03\x02\x02\x02\xBA\xBB\x03\x02\x02\x02\xBB\xB9\x03\x02\x02" +
		"\x02\xBB\xBC\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xBF\x070\x02" +
		"\x02\xBE\xC0\t\x03\x02\x02\xBF\xBE\x03\x02\x02\x02\xC0\xC1\x03\x02\x02" +
		"\x02\xC1\xBF\x03\x02\x02\x02\xC1\xC2\x03\x02\x02\x02\xC2@\x03\x02\x02" +
		"\x02\xC3\xC5\t\x03\x02\x02\xC4\xC3\x03\x02\x02\x02\xC5\xC6\x03\x02\x02" +
		"\x02\xC6\xC4\x03\x02\x02\x02\xC6\xC7\x03\x02\x02\x02\xC7B\x03\x02\x02" +
		"\x02\xC8\xCC\t\x04\x02\x02\xC9\xCB\t\x05\x02\x02\xCA\xC9\x03\x02\x02\x02" +
		"\xCB\xCE\x03\x02\x02\x02\xCC\xCA\x03\x02\x02\x02\xCC\xCD\x03\x02\x02\x02" +
		"\xCDD\x03\x02\x02\x02\xCE\xCC\x03\x02\x02\x02\xCF\xD0\x071\x02\x02\xD0" +
		"\xD1\x071\x02\x02\xD1\xD5\x03\x02\x02\x02\xD2\xD4\n\x06\x02\x02\xD3\xD2" +
		"\x03\x02\x02\x02\xD4\xD7\x03\x02\x02\x02\xD5\xD3\x03\x02\x02\x02\xD5\xD6" +
		"\x03\x02\x02\x02\xD6\xD8\x03\x02\x02\x02\xD7\xD5\x03\x02\x02\x02\xD8\xD9" +
		"\b#\x02\x02\xD9F\x03\x02\x02\x02\xDA\xDB\x071\x02\x02\xDB\xDC\x07,\x02" +
		"\x02\xDC\xE0\x03\x02\x02\x02\xDD\xDF\v\x02\x02\x02\xDE\xDD\x03\x02\x02" +
		"\x02\xDF\xE2\x03\x02\x02\x02\xE0\xE1\x03\x02\x02\x02\xE0\xDE\x03\x02\x02" +
		"\x02\xE1\xE3\x03\x02\x02\x02\xE2\xE0\x03\x02\x02\x02\xE3\xE4\x07,\x02" +
		"\x02\xE4\xE5\x071\x02\x02\xE5\xE6\x03\x02\x02\x02\xE6\xE7\b$\x02\x02\xE7" +
		"H\x03\x02\x02\x02\xE8\xEA\t\x07\x02\x02\xE9\xE8\x03\x02\x02\x02\xEA\xEB" +
		"\x03\x02\x02\x02\xEB\xE9\x03\x02\x02\x02\xEB\xEC\x03\x02\x02\x02\xEC\xED" +
		"\x03\x02\x02\x02\xED\xEE\b%\x02\x02\xEEJ\x03\x02\x02\x02\f\x02\xA8\xB6" +
		"\xBB\xC1\xC6\xCC\xD5\xE0\xEB\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!MyLangLexer.__ATN) {
			MyLangLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(MyLangLexer._serializedATN));
		}

		return MyLangLexer.__ATN;
	}

}

